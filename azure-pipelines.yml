# Docker
# Build a Docker image
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- master

variables:
  tag: '$(Build.SourceVersion)'
  dockerRepository: bratislava/$(Build.Repository.Name)/$(Build.Repository.Name)
  underscoreName: $[replace(variables['Build.Repository.Name'], '-', '_')]
resources:
  containers:
  - container: postgres
    image: postgres:13-alpine

stages:
- stage: Build
  displayName: Build image
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: ubuntu-latest
    steps:
    - task: Docker@2
      inputs:
        containerRegistry: 'Github Packages'
        repository: $(dockerRepository)
        command: 'build'
        Dockerfile: '**/Dockerfile'
        tags: '$(tag)'
      displayName: Build Docker Image
    - task: Docker@2
      inputs:
        containerRegistry: 'Github Packages'
        repository: $(dockerRepository)
        command: 'Push'
        Dockerfile: '**/Dockerfile'
        tags: '$(tag)'
      condition: and(succeeded(), eq(variables['Build.Reason'], 'IndividualCI'))
      displayName: Push Docker Image (not on PR)
- stage: Staging
  condition: and(succeeded(), eq(variables['Build.Reason'], 'IndividualCI'))
  jobs:
  - deployment: Staging
    environment:
      name: Staging
      resourceType: VirtualMachine
      tags: docker
    variables:
      NAME: $(underscoreName)_stage
      PORT: 18001
      HOST: "localhost:18000"
      RECAPTCHA_KEY: "6LcmTu0aAAAAAMZW1IexRzZWy5KX7fqT-IzZTfp8"
    strategy:
      runOnce:
        deploy:
          steps:
          - task: Docker@2
            inputs:
              containerRegistry: 'Github Packages'
              command: 'login'
          - script: |
              docker stop $NAME && docker rm $NAME || true
              docker run -d --name $NAME -p $PORT:80 -e HOST=$HOST -e HOST_FE=$HOST_FE --restart unless-stopped docker.pkg.github.com/$DOCKERREPOSITORY:$TAG

- stage: Production
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
  jobs:
  - deployment: Production
    environment:
      name: Production
      resourceType: VirtualMachine
      tags: docker
    variables:
      NAME: $(underscoreName)
      PORT: 19001
      HOST: "api.kupaliska.bratislava.sk"
      RECAPTCHA_KEY: "6Leae90aAAAAAM7NZfVEVC0rEyhh-tx-MYUthzYU"
    strategy:
      runOnce:
        deploy:
          steps:
          - task: Docker@2
            inputs:
              containerRegistry: 'Github Packages'
              command: 'login'
          - script: |
              docker stop $NAME && docker rm $NAME || true
              docker run -d --name $NAME -p $PORT:80 --restart unless-stopped docker.pkg.github.com/$DOCKERREPOSITORY:$TAG