include:
  - template: 'Workflows/Branch-Pipelines.gitlab-ci.yml'

default:
  image: alpine:latest
  tags:
    - docker
    - general

stages:
  - test
  - build
  - deploy

.dev:
  rules:
    - if: '$CI_COMMIT_BRANCH == "dev"'
  variables:
    IMAGE_TAG: "dev"

.stage:
  rules:
    - if: '$CI_COMMIT_BRANCH == "stage"'
    - if: '$CI_COMMIT_BRANCH == "hotfix"'
  variables:
    IMAGE_TAG: "stage"

.prod:
  rules:
    - if: '$CI_COMMIT_BRANCH == "master"'
  variables:
    IMAGE_TAG: "latest"

.build:
  stage: build
  image: docker:latest
  tags:
    - docker-socket
  before_script:
    - cp src/environments/environment.$IMAGE_TAG.ts src/environments/environment.ts
  script:
    - echo "$CI_REGISTRY_PASSWORD" | docker login -u "$CI_REGISTRY_USER" --password-stdin $CI_REGISTRY
    - docker pull -q $CI_REGISTRY_IMAGE:$IMAGE_TAG || true
    - docker build --pull --cache-from $CI_REGISTRY_IMAGE:$IMAGE_TAG --tag $CI_REGISTRY_IMAGE:$IMAGE_TAG .
    - docker push -q $CI_REGISTRY_IMAGE:$IMAGE_TAG

dev:build:
  extends:
    - .dev
    - .build

stage:build:
  extends:
    - .stage
    - .build

stage:build_and_publish_dry_run:
  extends:
    - .stage
  stage: build
  tags:
    - docker
    - privileged
  image: docker:git
  services:
    - docker:dind
  variables:
    DOCKER_TLS_CERTDIR: "/certs"
    DOCKER_REGISTRY_USER: "$CI_REGISTRY_USER"
    DOCKER_REGISTRY_PASSWORD: "$CI_REGISTRY_PASSWORD"
  cache:
    key: "$CI_COMMIT_REF_SLUG"
    paths:
      - .yarn/
      - node_modules/
  before_script:
    - apk add --no-cache nodejs npm yarn
    - yarn install --frozen-lockfile --cache-folder .yarn --ignore-engines
    - cp src/environments/environment.prod.ts src/environments/environment.ts
  script:
    - npx semantic-release --dry-run --branches stage,hotfix

prod:build_and_publish:
  extends:
    - .prod
  stage: build
  tags:
    - docker
    - privileged
  image: docker:git
  services:
    - docker:dind
  variables:
    DOCKER_TLS_CERTDIR: "/certs"
    DOCKER_REGISTRY_USER: "$CI_REGISTRY_USER"
    DOCKER_REGISTRY_PASSWORD: "$CI_REGISTRY_PASSWORD"
  cache:
    key: "$CI_COMMIT_REF_SLUG"
    paths:
      - .yarn/
      - node_modules/
  before_script:
    - apk add --no-cache nodejs npm yarn
    - yarn install --frozen-lockfile --cache-folder .yarn --ignore-engines
    - cp src/environments/environment.prod.ts src/environments/environment.ts
  script:
    - npx semantic-release

deploy:
  stage: deploy
  rules:
    - if: '$CI_COMMIT_BRANCH =~ /^(dev|stage|hotfix|master)$/'
  trigger:
    project: bratislava-projekty/kupaliska/kupaliska-starz-deployment
    branch: $CI_COMMIT_BRANCH
    strategy: depend

dev:analyze:
  stage: .post
  needs: [ ]
  tags:
    - elchapo
    - docker
    - general
  image:
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [ "" ]
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"
    GIT_DEPTH: "0"
  cache:
    key: "$CI_JOB_NAME"
    paths:
      - .yarn
      - node_modules
      - .sonar/cache
  before_script:
    - apk add yarn
    - yarn install --frozen-lockfile --cache-folder .yarn
  script:
    - sonar-scanner -Dsonar.qualitygate.wait=true -Dsonar.projectKey=ba-kupaliska-fe -Dsonar.sources=./src
  rules:
    - if: '$CI_COMMIT_BRANCH == "dev"'
      allow_failure: true
